# Note: Any strings begining with @ or % must be wrapped in quote marks
---
id: performance
title: Performance
isPrimary: true
description: Fastest site in the west
charts:
  -
    question: timing of loadEventStart
    name: loadEventStart
    query: page:load-timing->median(context.timings.offset.loadEventStart)
    datalabel: loadEventStart
  -
    question: timing of domComplete
    name: domComplete
    query: page:load-timing->median(context.timings.offset.domComplete)
    datalabel: domComplete
  -
    question: timing of domContentLoadedEventStart
    name: domContentLoadedEventStart
    query: page:load-timing->median(context.timings.offset.domContentLoadedEventStart)
    datalabel: domContentLoadedEventStart
  -
    question: timing of domInteractive
    name: domInteractive
    query: page:load-timing->median(context.timings.offset.domInteractive)
    datalabel: domInteractive
  -
    question: timing of fontsLoaded
    name: fontsLoaded
    query: page:load-timing->median(context.timings.marks.fontsLoaded)
    datalabel: fontsLoaded
  -
    question: What are browsers' average load times over the past 7 days?
    name: averagepageload/offset
    query: page:load-timing->median(context.timings.offset.loadEventEnd)->filter(page.location.type=frontpage)->filter(device.browserName!=false)->group(device.browserName)->divide(1000)->sortAsc(device.browserName)
    printer: BarChart
    datalabel: Average page load time by browser
  -
    question: What are browsers' average load times over the past 7 days (from point page has downloaded)?
    name: averagepageload/domloadingoffset
    query: page:load-timing->median(context.timings.domLoadingOffset.loadEventEnd)->filter(page.location.type=frontpage)->filter(device.browserName!=false)->group(device.browserName)->divide(1000)->sortAsc(device.browserName)
    printer: BarChart
    datalabel: Average page load time by browser (graphs offset from the domLoading event)
